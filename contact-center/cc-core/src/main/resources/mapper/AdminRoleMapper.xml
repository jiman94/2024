<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.voice9.core.mapper.AdminRoleMapper">
    <resultMap id="BaseResultMap" type="com.voice9.core.entity.AdminRole">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="cts" jdbcType="BIGINT" property="cts"/>
        <result column="uts" jdbcType="BIGINT" property="uts"/>
        <result column="company_id" jdbcType="BIGINT" property="companyId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
    </resultMap>

    <resultMap id="BaseResultPo" type="com.voice9.core.po.RolePo" extends="BaseResultMap">
        <collection property="adminMenuList" select="com.voice9.core.mapper.AdminMenuMapper.selectByRoleId"
                    column="id"></collection>
    </resultMap>

    <sql id="Base_Column_List">
        id
        , cts, uts, company_id, role_name, status
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from cc_admin_role
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from cc_admin_role
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.voice9.core.entity.AdminRole">
        insert into cc_admin_role (id, cts, uts, company_id,
                                   role_name, status)
        values (#{id,jdbcType=BIGINT}, #{cts,jdbcType=BIGINT}, #{uts,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT},
                #{roleName,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.voice9.core.entity.AdminRole">
        insert into cc_admin_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="cts != null">
                cts,
            </if>
            <if test="uts != null">
                uts,
            </if>
            <if test="companyId != null">
                company_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="cts != null">
                #{cts,jdbcType=BIGINT},
            </if>
            <if test="uts != null">
                #{uts,jdbcType=BIGINT},
            </if>
            <if test="companyId != null">
                #{companyId,jdbcType=BIGINT},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.voice9.core.entity.AdminRole">
        update cc_admin_role
        <set>
            <if test="cts != null">
                cts = #{cts,jdbcType=BIGINT},
            </if>
            <if test="uts != null">
                uts = #{uts,jdbcType=BIGINT},
            </if>
            <if test="companyId != null">
                company_id = #{companyId,jdbcType=BIGINT},
            </if>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.voice9.core.entity.AdminRole">
        update cc_admin_role
        set cts        = #{cts,jdbcType=BIGINT},
            uts        = #{uts,jdbcType=BIGINT},
            company_id = #{companyId,jdbcType=BIGINT},
            role_name  = #{roleName,jdbcType=VARCHAR},
            status     = #{status,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectRoleMenu" parameterType="java.lang.Long" resultMap="BaseResultPo">
        select
            <include refid="Base_Column_List"/>
        from
            cc_admin_role
        where
            id = #{roleId} and status = 1
    </select>

    <select id="selectList" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List"/>
        from
             cc_admin_role
        <where>
            <if test="true"> status = 1</if>
            <if test="roleName!=null"> and role_name = #{roleName}</if>
            <if test="companyId!=null"> and company_id = #{companyId}</if>
        </where>
    </select>

    <!-- 删除角色菜单 -->
    <delete id="deleteMenuByRoleId" parameterType="java.lang.Long">
        delete from cc_admin_role_menu where role_id = #{roleId}
    </delete>

    <delete id="deleteRole" parameterType="java.lang.Long">
        delete from cc_admin_role where id = #{id}
    </delete>

    <!-- 批量插入角色菜单  -->
    <insert id="batchInserRoleMenus" parameterType="List" useGeneratedKeys="true" keyProperty="id" >
        insert into cc_admin_role_menu (cts, uts, role_id, menu_id, company_id) values
        <foreach collection="list" item="roleMenu" separator=",">
            (#{roleMenu.cts,jdbcType=BIGINT}, #{roleMenu.uts,jdbcType=BIGINT}, #{roleMenu.roleId,jdbcType=BIGINT},#{roleMenu.menuId,jdbcType=BIGINT}, #{roleMenu.companyId,jdbcType=BIGINT} )
        </foreach>
    </insert>

    <insert id="batchInserRoleMenus" parameterType="List" databaseId="oracle">
        BEGIN
        insert into cc_agent (cts, company_id, agent_id, agent_key, agent_name, agent_type, passwd) values
        <foreach collection="list" item="agent" separator=",">
            (#{roleMenu.cts,jdbcType=BIGINT}, #{roleMenu.uts,jdbcType=BIGINT}, #{roleMenu.roleId,jdbcType=BIGINT},#{roleMenu.menuId,jdbcType=BIGINT}, #{roleMenu.companyId,jdbcType=BIGINT} )
        </foreach>
        COMMIT;
        END;
    </insert>


</mapper>