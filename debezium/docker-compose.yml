# MySQL-Source, Zookeeper, Kafka 컨테이너 빌드

version: '3'
services:

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql 
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./db/source/init:/docker-entrypoint-initdb.d/

      
  mysql-sink:
    image: mysql:8.0
    container_name: mysql-sink
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./db/target/init:/docker-entrypoint-initdb.d/


  kafka:
    container_name: kafka
    image: bitnami/kafka
    # depends_on:
    #   - zookeeper
    ports:
      - "9092:9092"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8085:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      # - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  debezium-ui:
    image: debezium/debezium-ui:2.4
    container_name: debezium-ui
    platform: linux/amd64
    environment:
      - KAFKA_CONNECT_URIS=http://connect:8083  # Pointing to Kafka Connect service
    ports:
      - 9091:8081
    depends_on:
      - connect

  connect:
    image: quay.io/debezium/connect:2.6
    container_name: connect
    ports:
     - 8083:8083
    links:
     - kafka
     - mysql-sink
     - mysql
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets

## 빌드
# docker-compose -f docker-compose.yml up -d
